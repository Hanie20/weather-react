{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Forecast.css\";\nexport default function Forecast(props) {\n  _s();\n\n  const [finishLoaded, setFinishLoaded] = useState(false);\n  const [weatherForecast, setWeatherForecast] = useState(null);\n\n  function handleForecastResponse(response) {\n    setFinishLoaded(true);\n    console.log(response.data);\n  }\n\n  if (finishLoaded) {\n    return \"loaded\";\n  } else {\n    const apiKey = \"19f46cb6a372e938ec33a12b4f819dec\";\n    let url = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(handleForecastResponse);\n    return null;\n  }\n}\n\n_s(Forecast, \"xpO3jk0jBcQTfroGuRNiFcq5Uj4=\");\n\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/Users/johaniedamas/weather-react/src/Forecast.js"],"names":["React","useState","axios","Forecast","props","finishLoaded","setFinishLoaded","weatherForecast","setWeatherForecast","handleForecastResponse","response","console","log","data","apiKey","url","city","get","then"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCL,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,IAAD,CAAtD;;AAEA,WAASQ,sBAAT,CAAgCC,QAAhC,EAA0C;AACtCJ,IAAAA,eAAe,CAAC,IAAD,CAAf;AAEHK,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA;;AAED,MAAIR,YAAJ,EAAkB;AACd,WAAO,QAAP;AACH,GAFD,MAEO;AACJ,UAAMS,MAAM,GAAG,kCAAf;AACA,QAAIC,GAAG,GAAI,sDAAqDX,KAAK,CAACY,IAAK,UAASF,MAAO,eAA3F;AACAZ,IAAAA,KAAK,CAACe,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAoBT,sBAApB;AACA,WAAO,IAAP;AACF;AAEJ;;GAnBuBN,Q;;KAAAA,Q","sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport \"./Forecast.css\";\n\nexport default function Forecast(props) {\n    const [finishLoaded, setFinishLoaded] = useState(false);\n    const [weatherForecast, setWeatherForecast] = useState(null);\n\n    function handleForecastResponse(response) {\n        setFinishLoaded(true);\n\n     console.log(response.data);\n    }\n    \n    if (finishLoaded) {\n        return \"loaded\";\n    } else {\n       const apiKey = \"19f46cb6a372e938ec33a12b4f819dec\";\n       let url = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n       axios.get(url).then(handleForecastResponse);\n       return null;\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}