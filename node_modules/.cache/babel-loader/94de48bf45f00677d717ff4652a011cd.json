{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/johaniedamas/weather-react/src/Container.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherData from \"./WeatherData\";\nimport \"./Container.css\";\nexport default function Container(props) {\n  _s();\n\n  const [data, setData] = useState({\n    finish: false\n  });\n  const [city, setCity] = useState(props.defaultCity);\n\n  function handleResponse(response) {\n    setData({\n      finish: true,\n      temperature: response.data.main.temp,\n      humidity: response.data.main.humidity,\n      city: response.data.name,\n      iconUrl: \"http://openweathermap.org/img/wn/03n@2x.png\",\n      wind: response.data.wind.speed,\n      update: new Date(response.data.dt * 1000),\n      description: response.data.weather[0].description\n    });\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search(city);\n  }\n\n  function findCity(event) {\n    setCity(event.target.value);\n  }\n\n  if (data.finish) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"search\",\n                placeholder: \"Enter a city... \",\n                className: \"city\",\n                onChange: findCity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Search\",\n                className: \"submitButton\",\n                autocomplete: \"off\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Current\",\n                className: \"current\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(WeatherData, {\n              info: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 10\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this);\n  } else {\n    const apiKey = \"19f46cb6a372e938ec33a12b4f819dec\";\n    let apiUrl = `http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n    axios.get(apiUrl).then(handleResponse);\n    return \"The app is loading....\";\n  }\n}\n\n_s(Container, \"cd7JhvjQSLxw6v1knF4vEayJ7NI=\");\n\n_c = Container;\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["/Users/johaniedamas/weather-react/src/Container.js"],"names":["React","useState","axios","WeatherData","Container","props","data","setData","finish","city","setCity","defaultCity","handleResponse","response","temperature","main","temp","humidity","name","iconUrl","wind","speed","update","Date","dt","description","weather","handleSubmit","event","preventDefault","search","findCity","target","value","apiKey","apiUrl","get","then"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport WeatherData from \"./WeatherData\";\nimport \"./Container.css\";\n\nexport default function Container(props) {\n  const [data, setData] = useState({finish: false});\n  const [city, setCity] = useState(props.defaultCity);\n\n   function handleResponse(response) {\n    setData({\n      finish : true,\n      temperature:response.data.main.temp,\n      humidity: response.data.main.humidity,\n      city: response.data.name,\n      iconUrl :\"http://openweathermap.org/img/wn/03n@2x.png\",\n      wind:response.data.wind.speed,\n      update: new Date(response.data.dt*1000),\n      description :response.data.weather[0].description\n    })\n  }\n\n  function handleSubmit(event) {\n   event.preventDefault();\n   search(city);\n  }\n\n  function findCity(event) {\n  setCity(event.target.value);\n  }\n\n  if (data.finish) {\n  return (\n    <div className=\"Container\">\n      <div className=\"card\">\n        <div className=\"card-body\">\n         <div className=\"form-group\">\n        <form onSubmit={handleSubmit}>\n          <input \n          type=\"search\" \n          placeholder=\"Enter a city... \" \n          className=\"city\" \n          onChange={findCity}\n          />\n          <input\n            type=\"submit\"\n            value=\"Search\"\n            className=\"submitButton\"\n            autocomplete=\"off\"\n          />\n          <input type=\"submit\"  value=\"Current\" className=\"current\"/>\n        </form>\n        <WeatherData info={data} />\n        </div>\n        </div>\n      </div>\n    </div>\n      );\n  } else { \n  const apiKey = \"19f46cb6a372e938ec33a12b4f819dec\";\n  let apiUrl =`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n  axios.get(apiUrl).then(handleResponse);\n  return \"The app is loading....\";\n  }\n\n \n}\n"]},"metadata":{},"sourceType":"module"}