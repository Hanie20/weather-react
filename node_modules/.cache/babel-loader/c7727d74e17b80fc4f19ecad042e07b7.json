{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/johaniedamas/weather-react/src/Forecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport \"./Forecast.css\";\nexport default function Forecast(props) {\n  _s();\n\n  const [finishLoaded, setFinishLoaded] = useState(false);\n  const [weatherForecast, setWeatherForecast] = useState(null);\n\n  function handleForecastResponse(response) {\n    setFinishLoaded(true);\n    setWeatherForecast(response.data);\n  }\n\n  if (finishLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Forecast\",\n      children: [\"10:00\", /*#__PURE__*/_jsxDEV(WeatherIcon, {\n        code: weatherForecast.list[0].weather[0].icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), Math.round(weatherForecast.list[0].main.temp), \"\\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  } else {\n    const apiKey = \"19f46cb6a372e938ec33a12b4f819dec\";\n    let url = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n    axios.get(url).then(handleForecastResponse);\n    return null;\n  }\n}\n\n_s(Forecast, \"xpO3jk0jBcQTfroGuRNiFcq5Uj4=\");\n\n_c = Forecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"sources":["/Users/johaniedamas/weather-react/src/Forecast.js"],"names":["React","useState","axios","WeatherIcon","Forecast","props","finishLoaded","setFinishLoaded","weatherForecast","setWeatherForecast","handleForecastResponse","response","data","list","weather","icon","Math","round","main","temp","apiKey","url","city","get","then"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,gBAAP;AAEA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AACpC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,IAAD,CAAtD;;AAEA,WAASS,sBAAT,CAAgCC,QAAhC,EAA0C;AACtCJ,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,IAAAA,kBAAkB,CAACE,QAAQ,CAACC,IAAV,CAAlB;AACH;;AAED,MAAIN,YAAJ,EAAkB;AACd,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,uCAEI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEE,eAAe,CAACK,IAAhB,CAAqB,CAArB,EAAwBC,OAAxB,CAAgC,CAAhC,EAAmCC;AAAtD;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKC,IAAI,CAACC,KAAL,CAAWT,eAAe,CAACK,IAAhB,CAAqB,CAArB,EAAwBK,IAAxB,CAA6BC,IAAxC,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH,GARD,MAQO;AACJ,UAAMC,MAAM,GAAG,kCAAf;AACA,QAAIC,GAAG,GAAI,sDAAqDhB,KAAK,CAACiB,IAAK,UAASF,MAAO,eAA3F;AACAlB,IAAAA,KAAK,CAACqB,GAAN,CAAUF,GAAV,EAAeG,IAAf,CAAoBd,sBAApB;AACA,WAAO,IAAP;AACF;AAEJ;;GAxBuBN,Q;;KAAAA,Q","sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport \"./Forecast.css\";\n\nexport default function Forecast(props) {\n    const [finishLoaded, setFinishLoaded] = useState(false);\n    const [weatherForecast, setWeatherForecast] = useState(null);\n\n    function handleForecastResponse(response) {\n        setFinishLoaded(true);\n        setWeatherForecast(response.data);\n    }\n    \n    if (finishLoaded) {\n        return (\n            <div className=\"Forecast\">\n                10:00\n                <WeatherIcon code={weatherForecast.list[0].weather[0].icon} />\n                {Math.round(weatherForecast.list[0].main.temp)}Â°C\n            </div>\n        );\n    } else {\n       const apiKey = \"19f46cb6a372e938ec33a12b4f819dec\";\n       let url = `https://api.openweathermap.org/data/2.5/forecast?q=${props.city}&appid=${apiKey}&units=metric`;\n       axios.get(url).then(handleForecastResponse);\n       return null;\n    }\n    \n}"]},"metadata":{},"sourceType":"module"}