{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/johaniedamas/weather-react/src/Temperature.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nexport default function Temperature(props) {\n  _s();\n\n  const [unit, setUnit] = useState('celsius');\n\n  function convertToFahrenheit(event) {\n    event.preventDefault();\n    setUnit('fahrenheit');\n  }\n\n  function convertToCelsius(event) {\n    event.preventDefault();\n    setUnit('celcius');\n  }\n\n  if (unit == 'celsius') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Temperature\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"temp\",\n        children: Math.round(props.celsius)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unit\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          className: \"active\",\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), \" |   \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          onClick: convertToFahrenheit,\n          children: \"\\xB0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Temperature\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"temp\",\n        children: Math.round(props.celsius)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"unit\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          onClick: convertToCelsius,\n          className: \"active\",\n          children: \"\\xB0C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), \" |   \\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(Temperature, \"2YI/E312i756Udf4yN9UwND5goY=\");\n\n_c = Temperature;\n\nvar _c;\n\n$RefreshReg$(_c, \"Temperature\");","map":{"version":3,"sources":["/Users/johaniedamas/weather-react/src/Temperature.js"],"names":["React","useState","Temperature","props","unit","setUnit","convertToFahrenheit","event","preventDefault","convertToCelsius","Math","round","celsius"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,eAAe,SAASC,WAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AACxC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,SAAD,CAAhC;;AAEA,WAASK,mBAAT,CAA6BC,KAA7B,EAAoC;AACnCA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,OAAO,CAAC,YAAD,CAAP;AACA;;AAED,WAASI,gBAAT,CAA0BF,KAA1B,EAAiC;AACjCA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,OAAO,CAAC,SAAD,CAAP;AACC;;AAED,MAAID,IAAI,IAAI,SAAZ,EAAuB;AACvB,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACM;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,kBAAwBM,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACS,OAAjB;AAAxB;AAAA;AAAA;AAAA;AAAA,cADN,eAEE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,gCACE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,wBAGW;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAEN,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHX;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUC,GAXD,MAWO;AACJ,wBACD;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACM;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,kBAAwBI,IAAI,CAACC,KAAL,CAAWR,KAAK,CAACS,OAAjB;AAAxB;AAAA;AAAA;AAAA;AAAA,cADN,eAEE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,gCACE;AAAG,UAAA,IAAI,EAAC,GAAR;AAAY,UAAA,OAAO,EAAEH,gBAArB;AAAsC,UAAA,SAAS,EAAC,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADC;AAUF;AACJ;;GApCuBP,W;;KAAAA,W","sourcesContent":["import React, {useState} from \"react\";\n\nexport default function Temperature (props) {\n    const [unit, setUnit] = useState('celsius');\n\n    function convertToFahrenheit(event) {\n     event.preventDefault();\n     setUnit('fahrenheit');\n    }\n\n    function convertToCelsius(event) {\n    event.preventDefault();\n    setUnit('celcius');\n    }\n\n    if (unit == 'celsius') { \n    return (\n      <div className=\"Temperature\">\n            <span className=\"temp\">{Math.round(props.celsius)}</span>\n        <span className=\"unit\">\n          <a href=\"/\" className=\"active\">\n            째C \n          </a> |   <a href=\"/\" onClick={convertToFahrenheit}>째F</a>\n        </span>\n        </div>\n    );\n    } else {\n       return (\n      <div className=\"Temperature\">\n            <span className=\"temp\">{Math.round(props.celsius)}</span>\n        <span className=\"unit\">\n          <a href=\"/\" onClick={convertToCelsius}className=\"active\" >\n            째C \n          </a> |   째F\n        </span>\n        </div>\n    );\n    }\n}"]},"metadata":{},"sourceType":"module"}