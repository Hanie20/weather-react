{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/johaniedamas/weather-react/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nexport default function SearchWeather(props) {\n  _s();\n\n  const [city, setCity] = useState(\"\");\n  const [data, setData] = useState(null);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n\n    if (city.length > 0) {\n      let apiKey = \"63319272f90841d507345d8c9d4e1232\";\n      let units = \"metric\";\n      let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}\n  &appid=${apiKey}&units=${units}`;\n      axios.get(apiUrl).then(showTemperature);\n    }\n  }\n\n  function updateCity(event) {\n    setCity(event.target.value);\n  }\n\n  function showTemperature(response) {\n    let temp = Math.round(response.data.main.temp);\n    let description = response.data.weather[0].description;\n    let humidity = response.data.main.humidity;\n    let wind = response.data.wind.speed;\n    let icon = `http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`;\n    console.log(response.data);\n    setData( /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Temperature: \", temp, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Description: \", description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Humidity: \", humidity, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Wind: \", wind, \"km/h\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: icon,\n          alt: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 1\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Search\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"search\",\n        placeholder: \"Enter a city...\",\n        onChange: updateCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this), data]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 1\n  }, this);\n}\n\n_s(SearchWeather, \"I59uQzTh7VppkPe5BY88QdNjgZw=\");\n\n_c = SearchWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchWeather\");","map":{"version":3,"sources":["/Users/johaniedamas/weather-react/src/Weather.js"],"names":["React","useState","axios","SearchWeather","props","city","setCity","data","setData","handleSubmit","event","preventDefault","length","apiKey","units","apiUrl","get","then","showTemperature","updateCity","target","value","response","temp","Math","round","main","description","weather","humidity","wind","speed","icon","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA;;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,IAAD,CAAhC;;AAEF,WAASQ,YAAT,CAAsBC,KAAtB,EAA6B;AAC7BA,IAAAA,KAAK,CAACC,cAAN;;AACC,QAAIN,IAAI,CAACO,MAAL,GAAc,CAAlB,EAAqB;AACpB,UAAIC,MAAM,GAAG,kCAAb;AACA,UAAIC,KAAK,GAAG,QAAZ;AACA,UAAIC,MAAM,GAAI,qDAAoDV,IAAK;AACzE,WAAWQ,MAAO,UAASC,KAAM,EAD/B;AAEAZ,MAAAA,KAAK,CAACc,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBC,eAAvB;AACA;AACD;;AACD,WAASC,UAAT,CAAoBT,KAApB,EAA2B;AACzBJ,IAAAA,OAAO,CAACI,KAAK,CAACU,MAAN,CAAaC,KAAd,CAAP;AACD;;AAED,WAASH,eAAT,CAAyBI,QAAzB,EAAkC;AAChC,QAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAQ,CAACf,IAAT,CAAcmB,IAAd,CAAmBH,IAA9B,CAAX;AACA,QAAII,WAAW,GAAGL,QAAQ,CAACf,IAAT,CAAcqB,OAAd,CAAsB,CAAtB,EAAyBD,WAA3C;AACA,QAAIE,QAAQ,GAAGP,QAAQ,CAACf,IAAT,CAAcmB,IAAd,CAAmBG,QAAlC;AACA,QAAIC,IAAI,GAAGR,QAAQ,CAACf,IAAT,CAAcuB,IAAd,CAAmBC,KAA9B;AACA,QAAIC,IAAI,GAAG,oCAAmCV,QAAQ,CAACf,IAAT,CAAcqB,OAAd,CAAsB,CAAtB,EAAyBI,IAAK,SAA5E;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAQ,CAACf,IAArB;AAEAC,IAAAA,OAAO,eACP;AAAA,8BACE;AAAA,oCAAkBe,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,oCAAkBI,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,iCAAeE,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,6BAAWC,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,+BACA;AACA,UAAA,GAAG,EAAEE,IADL;AACW,UAAA,GAAG,EAAEL;AADhB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADO,CAAP;AAWC;;AAED,sBACA;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAElB,YAAhB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,WAAW,EAAC,iBAAjC;AAAmD,QAAA,QAAQ,EAAEU;AAA7D;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKCZ,IALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AASC;;GAhDuBJ,a;;KAAAA,a","sourcesContent":["import React, {useState} from \"react\";\nimport axios from \"axios\";\n\nexport default function SearchWeather(props) {\n  const [city, setCity] = useState(\"\");\n  const [data, setData] = useState(null);\n\nfunction handleSubmit(event) {\nevent.preventDefault();\n if (city.length > 0) {\n  let apiKey = \"63319272f90841d507345d8c9d4e1232\";\n  let units = \"metric\";\n  let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}\n  &appid=${apiKey}&units=${units}`;\n  axios.get(apiUrl).then(showTemperature);\n }\n}\nfunction updateCity(event) {\n  setCity(event.target.value);\n}\n\nfunction showTemperature(response){\n  let temp = Math.round(response.data.main.temp);\n  let description = response.data.weather[0].description;\n  let humidity = response.data.main.humidity;\n  let wind = response.data.wind.speed;\n  let icon =`http://openweathermap.org/img/wn/${response.data.weather[0].icon}@2x.png`\nconsole.log(response.data);\n\nsetData(\n<ul>\n  <li>Temperature: {temp}Â°C</li>\n  <li>Description: {description}</li>\n  <li>Humidity: {humidity}%</li> \n  <li>Wind: {wind}km/h</li>\n  <li>\n  <img\n  src={icon} alt={description}/>\n  </li>\n</ul>);\n}\n\nreturn (\n<div className=\"Search\">\n  <form onSubmit={handleSubmit}>\n    <input type=\"search\" placeholder=\"Enter a city...\" onChange={updateCity}/>\n    <input type=\"submit\" value=\"Search\" />\n   </form> \n{data}\n </div>\n);\n}"]},"metadata":{},"sourceType":"module"}