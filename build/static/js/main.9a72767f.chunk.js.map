{"version":3,"sources":["FindDate.js","WeatherData.js","Container.js","index.js"],"names":["FindDate","props","day","date","getDay","hours","getHours","minutes","getMinutes","WeatherData","className","info","city","update","description","src","iconUrl","alt","Math","round","temperature","href","humidity","wind","Container","useState","finish","data","setData","defaultCity","setCity","handleResponse","response","main","temp","name","speed","Date","dt","weather","searchData","apiUrl","axios","get","then","onSubmit","event","preventDefault","type","placeholder","onChange","target","value","autocomplete","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"oNAEe,SAASA,EAASC,GAC9B,IASKC,EATM,CACP,SACA,SACC,UACA,YACA,WACA,SACA,YAEWD,EAAME,KAAKC,UACtBC,EAAQJ,EAAME,KAAKG,WACnBC,EAASN,EAAME,KAAKK,aAOxB,OANID,EAAU,KACVA,EAAO,WAAOA,IAEdF,EAAQ,KACRA,EAAK,WAAOA,IAET,gDAAmBH,EAAnB,IAAyBG,EAAzB,IAAiCE,KClB7B,SAASE,EAAYR,GAChC,OACA,sBAAKS,UAAU,cAAf,UACE,mCAAMT,EAAMU,KAAKC,KAAjB,OACA,mCAAK,cAACZ,EAAD,CAAUG,KAAMF,EAAMU,KAAKE,SAAhC,OACA,6BAAKZ,EAAMU,KAAKG,cACb,sBAAKJ,UAAU,SAAf,UACD,qBACEK,IAAKd,EAAMU,KAAKK,QAChBC,IAAKhB,EAAMU,KAAKG,YAChBJ,UAAU,YAEZ,sBAAMA,UAAU,OAAhB,SAAwBQ,KAAKC,MAAMlB,EAAMU,KAAKS,eAC9C,uBAAMV,UAAU,OAAhB,UACE,mBAAGW,KAAK,IAAIX,UAAU,SAAtB,mBADF,MAGS,mBAAGW,KAAK,IAAR,yBAGX,uBACI,+BACE,4CAAepB,EAAMU,KAAKW,SAA1B,QACA,wCAAWrB,EAAMU,KAAKY,KAAtB,iB,MCpBG,SAASC,EAAUvB,GAAQ,IAAD,EACfwB,mBAAS,CAACC,QAAQ,IADH,mBAChCC,EADgC,KAC1BC,EAD0B,OAEfH,mBAASxB,EAAM4B,aAFA,mBAEhCjB,EAFgC,KAE1BkB,EAF0B,KAItC,SAASC,EAAeC,GACvBJ,EAAQ,CACNF,QAAS,EACTN,YAAYY,EAASL,KAAKM,KAAKC,KAC/BZ,SAAUU,EAASL,KAAKM,KAAKX,SAC7BV,KAAMoB,EAASL,KAAKQ,KACpBnB,QAAS,8CACTO,KAAKS,EAASL,KAAKJ,KAAKa,MACxBvB,OAAQ,IAAIwB,KAAsB,IAAjBL,EAASL,KAAKW,IAC/BxB,YAAakB,EAASL,KAAKY,QAAQ,GAAGzB,cAI1C,SAAS0B,IACT,IACIC,EAAM,2DAAsD7B,EAAtD,kBADK,mCACL,iBACV8B,IAAMC,IAAIF,GAAQG,KAAKb,GAYvB,OAAIJ,EAAKD,OAEP,qBAAKhB,UAAU,YAAf,SACE,qBAAKA,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACC,sBAAKA,UAAU,aAAf,UACD,uBAAMmC,SAfZ,SAAsBC,GACrBA,EAAMC,iBACNP,KAaK,UACE,uBACAQ,KAAK,SACLC,YAAY,mBACZvC,UAAU,OACVwC,SAfR,SAAkBJ,GAClBhB,EAAQgB,EAAMK,OAAOC,UAgBb,uBACEJ,KAAK,SACLI,MAAM,SACN1C,UAAU,eACV2C,aAAa,QAEf,uBAAOL,KAAK,SAAUI,MAAM,UAAU1C,UAAU,eAElD,cAACD,EAAD,CAAaE,KAAMgB,cAOzBa,IACO,0BC7DT,SAASc,IACP,OACF,qBAAK5C,UAAU,MAAf,SACM,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAWmB,YAAY,aACvB,iCACG,wBAAOnB,UAAU,cAAjB,UACD,mBAAGW,KAAK,2CAA2C8B,OAAO,SAA1D,+BADC,MAEA,mBAAI9B,KAAK,0CAA0C8B,OAAO,SAA1D,yCAQX,IAAMI,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAACL,EAAD,IAASC,K","file":"static/js/main.9a72767f.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function FindDate(props) {\n   let days = [\n       \"Sunday\", \n       \"Monday\",\n        \"Tuesday\", \n        \"Wednesday\", \n        \"Thursday\",\n        \"Friday\", \n        \"Saturday\"\n    ];\n    let day = days[props.date.getDay()];\n    let hours = props.date.getHours();\n    let minutes =props.date.getMinutes();\n    if (minutes < 10 ) {\n        minutes = `0${minutes}`;\n    }\n    if (hours < 10 ) {\n        hours = `0${hours}`;\n    }\n    return <div>Last Update: {day} {hours}:{minutes}</div>;\n}","import React from \"react\";\nimport FindDate from \"./FindDate\";\n\nexport default function WeatherData(props) {\n    return(\n    <div className=\"WeatherData\">\n      <h1> {props.info.city} </h1>\n      <h2> <FindDate date={props.info.update} /> </h2>\n      <h3>{props.info.description}</h3>\n         <div className=\"degree\">\n        <img\n          src={props.info.iconUrl}\n          alt={props.info.description}\n          className=\"iconImg\"\n        />\n        <span className=\"temp\">{Math.round(props.info.temperature)}</span>\n        <span className=\"unit\">\n          <a href=\"/\" className=\"active\">\n            °C \n          </a> | <a href=\"/\">°F</a>\n        </span>\n      </div>\n      <br />\n          <ul>\n            <li>Humidity: {props.info.humidity} %</li>\n            <li>Wind: {props.info.wind} km/h</li>\n          </ul>\n        </div> \n      );\n}","import React, {useState} from \"react\";\nimport axios from \"axios\";\nimport WeatherData from \"./WeatherData\";\nimport \"./Container.css\";\n\nexport default function Container(props) {\n  const [data, setData] = useState({finish: false});\n  const [city, setCity] = useState(props.defaultCity);\n\n   function handleResponse(response) {\n    setData({\n      finish : true,\n      temperature:response.data.main.temp,\n      humidity: response.data.main.humidity,\n      city: response.data.name,\n      iconUrl :\"http://openweathermap.org/img/wn/03n@2x.png\",\n      wind:response.data.wind.speed,\n      update: new Date(response.data.dt*1000),\n      description :response.data.weather[0].description\n    })\n  }\n\n  function searchData() {\n  const apiKey = \"19f46cb6a372e938ec33a12b4f819dec\";\n  let apiUrl =`http://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;\n  axios.get(apiUrl).then(handleResponse);\n  }\n\n  function handleSubmit(event) {\n   event.preventDefault();\n   searchData();\n  }\n\n  function findCity(event) {\n  setCity(event.target.value);\n  }\n\n  if (data.finish) {\n  return (\n    <div className=\"Container\">\n      <div className=\"card\">\n        <div className=\"card-body\">\n         <div className=\"form-group\">\n        <form onSubmit={handleSubmit}>\n          <input \n          type=\"search\" \n          placeholder=\"Enter a city... \" \n          className=\"city\" \n          onChange={findCity}\n          />\n          <input\n            type=\"submit\"\n            value=\"Search\"\n            className=\"submitButton\"\n            autocomplete=\"off\"\n          />\n          <input type=\"submit\"  value=\"Current\" className=\"current\"/>\n        </form>\n        <WeatherData info={data} />\n        </div>\n        </div>\n      </div>\n    </div>\n      );\n  } else { \n  searchData();\n  return \"The app is loading....\";\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Container from \"./Container\";\n\nfunction App() {\n  return (\n<div className=\"App\">\n      <div className=\"container\">\n        <Container defaultCity=\"Montreal\"/>\n        <footer> \n           <small className=\"projectLink\">\n          <a href=\"https://github.com/Hanie20/weather-react\" target=\"_blank\" >Open-source code </a>\n        by <a  href=\"https://www.instagram.com/johaniedamas/\" target=\"_blank\">  Johanie Damas  </a>  \n        </small>\n        </footer>\n      </div>  \n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}